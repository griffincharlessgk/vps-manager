#!/usr/bin/env python3
"""
Script generate c√°c key c·∫ßn thi·∫øt cho production
"""
import secrets
import string
from cryptography.fernet import Fernet
from datetime import datetime

def generate_secret_key():
    """Generate Flask secret key"""
    return secrets.token_urlsafe(32)

def generate_encryption_key():
    """Generate encryption key cho sensitive data"""
    return Fernet.generate_key().decode()

def generate_secure_password(length=16):
    """Generate secure password"""
    characters = string.ascii_letters + string.digits + string.punctuation
    return ''.join(secrets.choice(characters) for _ in range(length))

def main():
    print("üîë VPS Manager - Key Generator")
    print("=" * 40)
    
    # Generate c√°c key
    secret_key = generate_secret_key()
    encryption_key = generate_encryption_key()
    db_password = generate_secure_password(12)
    
    print("‚úÖ ƒê√£ generate c√°c key:")
    print(f"SECRET_KEY={secret_key}")
    print(f"ENCRYPTION_KEY={encryption_key}")
    print(f"DB_PASSWORD={db_password}")
    
    print("\nüìù C·∫≠p nh·∫≠t file .env v·ªõi c√°c gi√° tr·ªã sau:")
    print("=" * 50)
    print(f"SECRET_KEY={secret_key}")
    print(f"ENCRYPTION_KEY={encryption_key}")
    print(f"DATABASE_URL=postgresql://vps_user:{db_password}@localhost/vps_manager")
    print("=" * 50)
    
    print("\n‚ö†Ô∏è  L∆∞u √Ω:")
    print("- L∆∞u c√°c key n√†y ·ªü n∆°i an to√†n")
    print("- Kh√¥ng chia s·∫ª c√°c key n√†y")
    print("- Backup c√°c key ƒë·ªÉ kh√¥i ph·ª•c khi c·∫ßn")
    
    # T·∫°o file backup keys
    backup_content = f"""# VPS Manager - Production Keys
# Generated on: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}

SECRET_KEY={secret_key}
ENCRYPTION_KEY={encryption_key}
DB_PASSWORD={db_password}

# PostgreSQL Setup Commands:
# CREATE USER vps_user WITH PASSWORD '{db_password}';
# CREATE DATABASE vps_manager OWNER vps_user;
# GRANT ALL PRIVILEGES ON DATABASE vps_manager TO vps_user;
"""
    
    with open('production_keys_backup.txt', 'w') as f:
        f.write(backup_content)
    
    print(f"\nüíæ ƒê√£ backup keys v√†o file: production_keys_backup.txt")
    print("‚ö†Ô∏è  X√≥a file n√†y sau khi ƒë√£ c·∫≠p nh·∫≠t .env!")

if __name__ == '__main__':
    main() 